name: security

on:
  push:
    paths:
      - "Cargo.toml"
      - "Cargo.lock"
      - "deny.toml"
      - ".github/workflows/security.yml"
  pull_request:
    paths:
      - "Cargo.toml"
      - "Cargo.lock"
      - "deny.toml"
      - ".github/workflows/security.yml"
  schedule:
    - cron: "17 5 * * 1"   # Mondays 05:17 UTC (weekly baseline protection)
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  deny:
    name: cargo-deny (Licenses/Bans/Advisories)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Cache cargo-deny binary
        id: cache-cargo-deny
        uses: actions/cache@v4
        with:
          path: ~/.cargo-deny-bin
          key: cargo-deny-bin-v0.14.20 # Update version as needed
      - name: Download cargo-deny binary if not cached
        if: steps.cache-cargo-deny.outputs.cache-hit != 'true'
        run: |
          set -euo pipefail
          mkdir -p ~/.cargo-deny-bin
          cd ~/.cargo-deny-bin
          archive_url=https://github.com/EmbarkStudios/cargo-deny/releases/download/0.14.20/cargo-deny-x86_64-unknown-linux-musl.tar.gz
          if curl -sSfL -o cargo-deny.tar.gz "${archive_url}"; then
            if tar tzf cargo-deny.tar.gz > /dev/null; then
              extracted_dir=$(tar tzf cargo-deny.tar.gz | head -1 | cut -d/ -f1)
              if tar xzf cargo-deny.tar.gz; then
                install -m 755 "${extracted_dir}/cargo-deny" ./cargo-deny
                rm -rf "${extracted_dir}" cargo-deny.tar.gz
              else
                echo "Failed to extract prebuilt cargo-deny archive; falling back to cargo install" >&2
                rm -rf "${extracted_dir}" cargo-deny.tar.gz
                cargo install cargo-deny --locked --force
                install -m 755 "$HOME/.cargo/bin/cargo-deny" ./cargo-deny
              fi
            else
              echo "Downloaded cargo-deny archive is invalid; falling back to cargo install" >&2
              rm -f cargo-deny.tar.gz
              cargo install cargo-deny --locked --force
              install -m 755 "$HOME/.cargo/bin/cargo-deny" ./cargo-deny
            fi
          else
            echo "Failed to download prebuilt cargo-deny archive; falling back to cargo install" >&2
            cargo install cargo-deny --locked --force
            install -m 755 "$HOME/.cargo/bin/cargo-deny" ./cargo-deny
          fi
      - name: Add cargo-deny to PATH
        run: echo "$HOME/.cargo-deny-bin" >> $GITHUB_PATH
      - name: Run cargo-deny checks
        run: |
          cargo-deny check advisories
          cargo-deny check bans
          cargo-deny check licenses
  audit:
    name: cargo-audit (CVE Check)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [deny]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Install cargo-audit (fresh)
        run: cargo install cargo-audit --locked --force
      - name: Run cargo audit
        run: cargo audit --timeout 90
