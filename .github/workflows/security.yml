name: security
on:
  schedule:
    - cron: "0 3 * * *"
  pull_request:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  audit-deny:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
      - name: Install tools
        run: |
          cargo install cargo-audit --locked
          cargo install cargo-deny --locked
      - name: Cache cargo-audit DB
        uses: actions/cache@v4
        with:
          path: ~/.cargo/advisory-db
          key: ${{ runner.os }}-advisory-db-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-advisory-db-
      - name: Update advisory DB
        run: |
          # Updates the RustSec database after cache restore to avoid staleness
          timeout 120s cargo audit fetch
          status=$?
          if [ $status -eq 124 ]; then
            echo "cargo audit fetch timed out (exit code 124), continuing with possibly stale advisory DB."
          elif [ $status -ne 0 ]; then
            echo "cargo audit fetch failed with exit code $status"
            exit $status
          fi
      - name: cargo audit
        run: cargo audit -D warnings --timeout 60
      - name: cargo deny
        run: cargo deny check
