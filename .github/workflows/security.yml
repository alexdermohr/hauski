name: security
on:
  schedule:
    - cron: "0 3 * * *"
  pull_request:
  workflow_dispatch:
jobs:
  audit-deny:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
      - name: Install tools
        run: |
          cargo install cargo-audit --locked
          cargo install cargo-deny --locked
      - name: Cache cargo-audit DB
        uses: actions/cache@v4
        with:
          path: ~/.cargo/advisory-db
          # Stable key with restore prefix; freshness is ensured by 'cargo audit fetch'
          key: ${{ runner.os }}-advisory-db-v1
          restore-keys: |
            ${{ runner.os }}-advisory-db-
      - name: Update advisory DB
        run: |
          # Aktualisiert die RustSec-Datenbank nach Cache-Restore, um Staleness zu vermeiden
          cargo audit fetch
      - name: cargo audit
        run: cargo audit --timeout 60
      - name: cargo deny
        run: cargo deny check
