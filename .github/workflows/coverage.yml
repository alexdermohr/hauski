name: coverage
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - "crates/**"
      - "Cargo.toml"
      - "Cargo.lock"
      - ".github/workflows/coverage.yml"
  workflow_dispatch:
jobs:
  cov:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.draft == false
    timeout-minutes: 12
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - name: Cache cargo + target
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          key: ${{ runner.os }}-cov-${{ hashFiles('**/Cargo.lock') }}
      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov --locked
      - name: Run coverage (focused)
        env:
          # genügt für llvm-cov, ist etwas schneller als debuginfo=2
          RUSTFLAGS: "-C debuginfo=1"
        run: |
          # nur die runtime-relevanten Crates messen
          PKGS="--package hauski-core --package hauski-indexd"
          cargo llvm-cov $PKGS --lcov --output-path lcov.info
      - name: Upload lcov
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lcov.info
          path: lcov.info
      # Coveralls optional – ein-/auskommentieren je nach Bedarf:
      # - uses: coverallsapp/github-action@v2
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     path-to-lcov: lcov.info
