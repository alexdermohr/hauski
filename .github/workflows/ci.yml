name: CI (smart PR)

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened, ready_for_review, labeled, unlabeled]
  merge_group: {}
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      rust:  ${{ steps.filter.outputs.rust }}
      docs:  ${{ steps.filter.outputs.docs }}
      sh:    ${{ steps.filter.outputs.sh }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            rust:
              - '**/*.rs'
              - 'Cargo.toml'
              - 'Cargo.lock'
            docs:
              - '**/*.md'
              - 'docs/**'
            sh:
              - '**/*.sh'
              - '.github/workflows/**'

  repo-lint:
    name: Repo — Markdown & Shell
    needs: changes
    if: needs.changes.outputs.docs == 'true' || needs.changes.outputs.sh == 'true' || github.event_name == 'merge_group'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
      - name: Markdownlint
        run: |
          npm i -g markdownlint-cli@0.41.0
          git ls-files '*.md' | xargs -r markdownlint
      - name: ShellCheck
        run: |
          sudo apt-get update && sudo apt-get install -y shellcheck
          git ls-files '*.sh' | xargs -r shellcheck -x
      - name: Lychee (links)
        if: github.event_name == 'merge_group' || (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'full-ci'))
        uses: lycheeverse/lychee-action@v2
        with:
          args: --no-progress --verbose --retry-wait-time 2 --max-redirects 5 --exclude-mail "**/*.md"

  rust-check:
    name: Rust — fmt & clippy & test
    needs: changes
    if: needs.changes.outputs.rust == 'true' || github.event_name == 'merge_group'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      RUSTFLAGS: -Dwarnings
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
      - name: Enable Rust problem matchers
        run: echo "::add-matcher::.github/rust.json"
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
      - name: Cargo fmt
        run: cargo fmt --all -- --check
      - name: Cargo clippy
        run: cargo clippy --all-targets -- -D warnings
      - uses: taiki-e/install-action@v2
        with:
          tool: nextest
      - name: Tests
        run: |
          if command -v cargo-nextest >/dev/null; then
            cargo nextest run --workspace --all-features --no-fail-fast
          else
            cargo test --workspace --all-features --no-fail-fast
          fi
      - name: Upload target (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: rust-check-target
          path: target
          if-no-files-found: ignore
          retention-days: 7

  security:
    name: Rust — deny & audit
    needs: changes
    if: github.event_name == 'merge_group' || (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'full-ci'))
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: EmbarkStudios/cargo-deny-action@v2
      - uses: rustsec/audit-check@v2
